---
- name: Pre-Test Scenario 1.0 - initialize docker containers
  hosts: localhost
  roles:
    - role: 'provision_docker'
      provision_docker__inventory:
        - name: 'test_system_users_t1_centos7'
          image: 'tomashavlas/ansible-test:centos7'
          volumes:
            - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
        - name: 'test_system_users_t1_debian8'
          image: 'tomashavlas/ansible-test:debian8'
          volumes:
            - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
  post_tasks:
    - name: Wait for SSH connection to docker containers
      wait_for:
        host: '{{ hostvars[item.name]["ansible_ssh_host"] }}'
        port: 22
        timeout: 30
        connect_timeout: 30
      with_items: '{{ provision_docker__inventory }}'
  tags: [ 'initialize-docker' ]

- name: Test Scenario 1.1 - basic functionality
  hosts: provision_docker__containers
  remote_user: 'root'
  pre_tasks:
    - name: Pre-Test - create test groups
      group:
        name: '{{ item }}'
        state: 'present'
      with_items:
        - 's1_group1'
        - 's1_group2'
        - 's1_group3'
        - 's1_group4'
        - 's1_homegroup'
      changed_when: False
      tags: [ 'pre-test' ]
    - name: Pre-Test - create "remove me" user
      user:
        name: 's1_removeme'
        state: 'present'
      changed_when: False
      tags: [ 'pre-test' ]
    - name: Pre-Test - create homeowner user
      user:
        name: 's1_homeowner'
        state: 'present'
      changed_when: False
      tags: [ 'pre-test' ]
  post_tasks:
    - name: Acceptance Test - verify ansible dedicated user presence
      user:
        name: 's1_ansible'
        uid: 2100
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify simple user presence
      user:
        name: 's1_simple'
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify advanced user presence
      user:
        name: 's1_advanced'
        comment: 'comment'
        createhome: 'yes'
        group: 's1_group1'
        groups: 's1_group2,s1_group3,s1_group4'
        home: '/opt/testadv'
        password: '$6$rounds=100000$yPL.FSLbB5Qekkvb$L5Be8NDTZlkkD09737laWyNgpoikHNuVeuMnPJTtAYT5dRJCDT5PJnPZDZSuIXaGfSvuhudD85T42spTEyBIP/'
        shell: '/bin/sh'
        system: 'no'
        update_password: 'always'
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify system user presence
      user:
        name: 's1_system'
        system: 'yes'
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify disabled user absence
      user:
        name: 's1_disabled'
        state: 'absent'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify "remove me" user absence
      user:
        name: 's1_removeme'
        state: 'absent'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify not disabled user presence
      user:
        name: 's1_notdisabled'
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify root user is not changed
      user:
        name: 'root'
        uid: 0
        home: '/root'
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify homedir user presence
      user:
        name: 's1_homedir'
        home: '/opt/homedir'
        state: 'present'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
    - name: Acceptance Test - verify homedir user home directory presence
      file:
        path: '/opt/homedir'
        owner: 's1_homeowner'
        group: 's1_homegroup'
        mode: '0750'
        state: 'directory'
      register: 'test_result'
      failed_when: (test_result|failed or test_result|changed)
      tags: [ 'acceptance-test' ]
  roles:
    - role: 'system_users'
# test ansible dedicated user
      system_users__ansible:
        - name: 's1_ansible'
          uid: 2100
      system_users__list:
# test simple user
        - name: 's1_simple'
# test advanced user
        - name: 's1_advanced'
          comment: 'comment'
          createhome: 'yes'
          group: 's1_group1'
          groups:
            - 's1_group2'
            - 's1_group3'
            - 's1_group4'
          home: '/opt/testadv'
          password: '$6$rounds=100000$yPL.FSLbB5Qekkvb$L5Be8NDTZlkkD09737laWyNgpoikHNuVeuMnPJTtAYT5dRJCDT5PJnPZDZSuIXaGfSvuhudD85T42spTEyBIP/'
          shell: '/bin/sh'
          system: 'no'
          generate_ssh_key: 'yes'
          ssh_key_bits: 4096
          ssh_key_comment: 'test_ssh_key'
          ssh_key_file: '.ssh/id_rsa4096'
          ssh_key_type: 'rsa'
# test system user
        - name: 's1_system'
          system: 'yes'
# test disabled user
        - name: 's1_disabled'
          disabled: True
        - name: 's1_removeme'
          remove: 'yes'
          disabled: True
# test not disabled user
        - name: 's1_notdisabled'
          disabled: False
# test root user
        - name: 'root'
          uid: 1500
          home: '/opt/root'
# test home directory creation
        - name: 's1_homedir'
          createhome: 'yes'
          home: '/opt/homedir'
          home_owner: 's1_homeowner'
          home_group: 's1_homegroup'
          home_mode: '0750'
